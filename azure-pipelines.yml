trigger:
- main       # pipeline runs whenever code is pushed to the main branch

pool:
  vmImage: 'ubuntu-latest'

steps:
# Step 1: Install Terraform
- task: TerraformInstaller@1
  inputs:
    terraformVersion: '1.5.7'

# Step 2: Initialize Terraform
- task: TerraformTaskV4@4
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    backendServiceArm: 'sc-azure'         # Azure Service Connection
    backendAzureRmResourceGroupName: 'rg-tfstate'
    backendAzureRmStorageAccountName: 'tfstateuniquestring'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

# Step 3: Plan Terraform deployment
- task: TerraformTaskV4@4
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'sc-azure'

# Step 4: Apply Terraform changes
- task: TerraformTaskV4@4
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'sc-azure'
    args: '-auto-approve'
